{"version":3,"sources":["component/Expenses/ExpensesFilter.js","component/Expenses/ExpenseDate.js","component/UI/Card.js","component/Expenses/ExpenseItem.js","component/Expenses/ExpensesList.js","component/Chart/ChartBar.js","component/Chart/Chart.js","component/Expenses/ExpensesChart.js","component/Expenses/Expenses.js","component/NewExpenses/ExpenseForm.js","component/NewExpenses/NewExpense.js","App.js","index.js"],"names":["ExpensesFilter","props","className","value","selected","onChange","event","onChangeFilter","target","ExpenseDate","day","date","toLocaleString","month","year","getFullYear","Card","classes","children","ExpenseItem","name","amount","ExpensesList","items","length","map","expense","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","maximumValue","max","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","listOfItems","filter","toString","selectedYear","ExpenseForm","enteredName","setEnteredName","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","e","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","NewExpenses","isEditing","setIsEditing","onClick","enteredExpenseData","random","onAddExpense","onCancel","DUMMY_DATA","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c6c5e7f9.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport \"./ExpensesFilter.css\";\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const dropdownChangeHandler = (event) => {\r\n    props.onChangeFilter(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={dropdownChangeHandler}>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2023\">2023</option>\r\n          <option value=\"2024\">2024</option>\r\n          <option value=\"2025\">2025</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import \"./ExpenseDate.css\";\r\n\r\nfunction ExpenseDate(props) {\r\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\r\n  const year = props.date.getFullYear();\r\n\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExpenseDate;\r\n","import \"./Card.css\";\r\n\r\nfunction Card(props) {\r\n  const classes = \"card \" + props.className;\r\n  return <div className={classes}>{props.children}</div>;\r\n}\r\n\r\nexport default Card;\r\n","import ExpenseDate from \"./ExpenseDate\";\r\nimport Card from \"../UI/Card\";\r\nimport \"./ExpenseItem.css\";\r\n\r\nfunction ExpenseItem(props) {\r\n  return (\r\n    <Card className=\"expense-item\">\r\n      <ExpenseDate date={props.date}></ExpenseDate>\r\n      <div className=\"expense-item__description\">\r\n        <h2>{props.name}</h2>\r\n        <div className=\"expense-item__price\">Rs. {props.amount}</div>\r\n      </div>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default ExpenseItem;\r\n","import ExpenseItem from \"./ExpenseItem\";\r\nimport \"./ExpensesList.css\";\r\n\r\nconst ExpensesList = (props) => {\r\n  if (props.items.length === 0) {\r\n    return <h2 className=\"expenses-list__fallback\">Expenses not found!</h2>;\r\n  }\r\n\r\n  return (\r\n    <ul className=\"expenses-list\">\r\n      {props.items.map((expense) => (\r\n        <ExpenseItem\r\n          key={expense.id}\r\n          name={expense.name}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ExpensesList;\r\n","import \"./ChartBar.css\";\r\n\r\nconst ChartBar = (props) => {\r\n  let barFillHeight = \"0%\";\r\n\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div\r\n          className=\"chart-bar__fill\"\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;\r\n","import ChartBar from \"./ChartBar\";\r\nimport \"./Chart.css\";\r\n\r\nconst Chart = (props) => {\r\n  const dataPointValues = props.dataPoints.map((dataPoint) => dataPoint.value);\r\n  const maximumValue = Math.max(...dataPointValues);\r\n\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={maximumValue}\r\n          label={dataPoint.label}\r\n        ></ChartBar>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import Chart from \"../Chart/Chart\";\r\n\r\nconst ExpensesChart = (props) => {\r\n  const chartDataPoints = [\r\n    {\r\n      label: \"Jan\",\r\n      value: 0,\r\n    },\r\n    {\r\n      label: \"Feb\",\r\n      value: 0,\r\n    },\r\n    {\r\n      label: \"Mar\",\r\n      value: 0,\r\n    },\r\n    {\r\n      label: \"Apr\",\r\n      value: 0,\r\n    },\r\n    {\r\n      label: \"May\",\r\n      value: 0,\r\n    },\r\n    {\r\n      label: \"Jun\",\r\n      value: 0,\r\n    },\r\n    {\r\n      label: \"Jul\",\r\n      value: 0,\r\n    },\r\n    {\r\n      label: \"Aug\",\r\n      value: 0,\r\n    },\r\n    {\r\n      label: \"Sep\",\r\n      value: 0,\r\n    },\r\n    {\r\n      label: \"Oct\",\r\n      value: 0,\r\n    },\r\n    {\r\n      label: \"Nov\",\r\n      value: 0,\r\n    },\r\n    {\r\n      label: \"Dec\",\r\n      value: 0,\r\n    },\r\n  ];\r\n\r\n  for (const expense of props.expenses) {\r\n    const expenseMonth = expense.date.getMonth();\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n  }\r\n\r\n  return <Chart dataPoints={chartDataPoints}></Chart>;\r\n};\r\n\r\nexport default ExpensesChart;\r\n","import React, { useState } from \"react\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport ExpensesList from \"./ExpensesList\";\r\nimport ExpenseChart from \"./ExpensesChart\";\r\nimport Card from \"../UI/Card\";\r\nimport \"./Expenses.css\";\r\n\r\nconst Expenses = (props) => {\r\n  const [filteredYear, setFilteredYear] = useState(\"2022\");\r\n\r\n  const filterChangeHandler = (selectedYear) => {\r\n    setFilteredYear(selectedYear);\r\n  };\r\n\r\n  const filteredExpenses = props.listOfItems.filter((expense) => {\r\n    return expense.date.getFullYear().toString() === filteredYear;\r\n  });\r\n\r\n  return (\r\n    <Card className=\"expenses\">\r\n      <ExpensesFilter\r\n        selected={filteredYear}\r\n        onChangeFilter={filterChangeHandler}\r\n      ></ExpensesFilter>\r\n      <ExpenseChart expenses={filteredExpenses}></ExpenseChart>\r\n      <ExpensesList items={filteredExpenses} />\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n","import React, { useState } from \"react\";\r\n\r\nimport \"./ExpenseForm.css\";\r\n\r\nfunction ExpenseForm(props) {\r\n  const [enteredName, setEnteredName] = useState(\"\");\r\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n\r\n  const nameChangeHandler = (e) => {\r\n    setEnteredName(e.target.value);\r\n  };\r\n  const amountChangeHandler = (e) => {\r\n    setEnteredAmount(e.target.value);\r\n  };\r\n  const dateChangeHandler = (e) => {\r\n    setEnteredDate(e.target.value);\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    const expenseData = {\r\n      name: enteredName,\r\n      amount: +enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n\r\n    props.onSaveExpenseData(expenseData);\r\n    setEnteredName(\"\");\r\n    setEnteredAmount(\"\");\r\n    setEnteredDate(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Name</label>\r\n          <input\r\n            type=\"text\"\r\n            value={enteredName}\r\n            onChange={nameChangeHandler}\r\n          ></input>\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input\r\n            type=\"number\"\r\n            min=\"1\"\r\n            step=\"1\"\r\n            value={enteredAmount}\r\n            onChange={amountChangeHandler}\r\n          ></input>\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            min=\"2022-01-01\"\r\n            max=\"2025-12-31\"\r\n            value={enteredDate}\r\n            onChange={dateChangeHandler}\r\n          ></input>\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button type=\"submit\">Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ExpenseForm;\r\n","import React, { useState } from \"react\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\n\r\nimport \"./NewExpense.css\";\r\n\r\nconst NewExpenses = (props) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  const saveExpenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString(),\r\n    };\r\n    props.onAddExpense(expenseData);\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const startEditingHandler = () => {\r\n    setIsEditing(true);\r\n  };\r\n\r\n  const stopEditingHandler = () => {\r\n    setIsEditing(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"new-expense\">\r\n      {!isEditing && (\r\n        <button onClick={startEditingHandler}>Add New Expense</button>\r\n      )}\r\n      {isEditing && (\r\n        <ExpenseForm\r\n          onSaveExpenseData={saveExpenseDataHandler}\r\n          onCancel={stopEditingHandler}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpenses;\r\n","import React, { useState } from \"react\";\nimport Expenses from \"./component/Expenses/Expenses\";\nimport NewExpenses from \"./component/NewExpenses/NewExpense\";\n\nconst DUMMY_DATA = [\n  {\n    id: \"1\",\n    name: \"Shadow Count\",\n    amount: 800000,\n    date: new Date(2000, 8, 28),\n  },\n];\n\nfunction App() {\n  const [expenses, setExpenses] = useState(DUMMY_DATA);\n\n  const appExpenseHandler = (expense) => {\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n  };\n\n  return (\n    <div>\n      <NewExpenses onAddExpense={appExpenseHandler}></NewExpenses>\n      <Expenses listOfItems={expenses}></Expenses>\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}